#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define TIMEOUT 50

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
        macro_LANG1: macro_LANG1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "LANG1_MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LCTRL>,
                <&kp LSHFT>;
        };
        macro_LANG2: macro_LANG2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "LANG2_MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_EXCLAMATION: macro_EXCLAMATION {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "!_MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N1>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_AT_SIGN: macro_AT_SIGN {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "@_MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_HASH: macro_HASH {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "#_MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N3>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_DOLLAR: macro_DOLLAR {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "$_MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N4>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_PERCENT: macro_PERCENT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "%_MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N5>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_CARET: macro_CARET {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "^_MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N6>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_AMPERSAND: macro_AMPERSAND {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "&_MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N7>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_ASTERISK: macro_ASTERISK {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "*_MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N8>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_LEFT_PAREN: macro_LEFT_PAREN {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "(_MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N9>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_RIGHT_PAREN: macro_RIGHT_PAREN {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = ")_MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N0>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_UNDERSCORE: macro_UNDERSCORE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "__MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp MINUS>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_PLUS: macro_PLUS {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "+_MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp EQUAL>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_LEFT_BRACE: macro_LEFT_BRACE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "{_MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp LBKT>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_RIGHT_BRACE: macro_RIGHT_BRACE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "}_MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp RBKT>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_COLON: macro_COLON {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = ":_MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp SEMI>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_DOUBLE_QUOTE: macro_DOUBLE_QUOTE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "dq_MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp APOSTROPHE>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_LESS_THAN: macro_LESS_THAN {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "<_MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp COMMA>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_GREATER_THAN: macro_GREATER_THAN {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = ">_MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp DOT>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_QUESTION: macro_QUESTION {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "?_MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp SLASH>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_PIPE: macro_PIPE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "|_MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp BACKSLASH>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_TILDE: macro_TILDE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "~_MACRO";
            wait-ms = <0>;
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp GRAVE>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_N1: macro_N1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "AT_MACRO";
            wait-ms = <0>; // 必要なら調整
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N1>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_N2: macro_N2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "AT_MACRO";
            wait-ms = <0>; // 必要なら調整
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_N3: macro_N3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "AT_MACRO";
            wait-ms = <0>; // 必要なら調整
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N3>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_N4: macro_N4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "AT_MACRO";
            wait-ms = <0>; // 必要なら調整
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N4>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_N5: macro_N5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "AT_MACRO";
            wait-ms = <0>; // 必要なら調整
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N5>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_N6: macro_N6 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "AT_MACRO";
            wait-ms = <0>; // 必要なら調整
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N6>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_N7: macro_N7 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "AT_MACRO";
            wait-ms = <0>; // 必要なら調整
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N7>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_N8: macro_N8 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "AT_MACRO";
            wait-ms = <0>; // 必要なら調整
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N9>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_N9: macro_N9 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "AT_MACRO";
            wait-ms = <0>; // 必要なら調整
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N9>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        macro_N0: macro_N0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            label = "AT_MACRO";
            wait-ms = <0>; // 必要なら調整
            bindings =
                <&macro_wait_time TIMEOUT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N0>,
                <&macro_release>,
                <&kp LSHFT>;
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            label = "SCROLL_UP_DOWN";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W  &kp E         &kp R                      &kp T                                                       &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A      &kp S  &kp D         &kp F                      &kp G        &kp LS(LG(S))            &mt LEFT_SHIFT MINUS  &kp H        &kp J  &kp K      &kp L    &lt 4 SEMICOLON
&kp Z      &kp X  &kp C         &kp V                      &kp B        &macro_LANG2             &macro_LANG1          &kp N        &kp M  &kp COMMA  &kp DOT  &lt 5 SLASH
&lt 3 ESC  &mo 2  &kp LEFT_ALT  &mt LEFT_SHIFT INT_HENKAN  &lt 2 SPACE  &mt LCTRL TAB            &kp BACKSPACE         &lt 1 ENTER                             &kp DEL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        Num-Arrow {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                        &kp NUMBER_6    &kp NUMBER_7    &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &trans      &trans    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW       &kp LA(PRINTSCREEN)
&kp F6        &kp F7        &kp F8        &kp F9        &kp F10       &trans      &kp HOME  &kp END         &kp PAGE_DOWN   &kp PAGE_UP   &kp C_AL_MY_COMPUTER  &kp LG(R)
&kp F11       &kp F12       &trans        &trans        &trans        &trans      &trans    &trans                                                              &kp LG(D)
            >;
        };

        KIGOU {
            bindings = <
&macro_EXCLAMATION  &macro_AT_SIGN  &macro_HASH    &macro_DOLLAR  &macro_PERCENT                                               &macro_CARET  &macro_AMPERSAND  &macro_ASTERISK      &macro_LEFT_PAREN  &macro_RIGHT_PAREN
&kp F2              &kp F4          &kp F5         &kp LC(F)      &kp LC(G)       &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &macro_PLUS   &kp EQUAL         &macro_DOUBLE_QUOTE  &kp LEFT_BRACKET   &kp RIGHT_BRACKET
&kp LC(Z)           &kp LC(X)       &kp LC(LS(C))  &kp LC(LS(V))  &kp LC(B)       &kp EQUAL                    &kp TILDE       &kp DLLR      &macro_PLUS       &kp BACKSLASH        &macro_LEFT_BRACE  &macro_RIGHT_BRACE
&trans              &trans          &trans         &trans         &trans          &trans                       &trans          &trans                                                                  &kp PIPE
            >;
        };

        NUM {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                             &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS   &kp SLASH
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &kp EQUAL     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS    &kp ASTRK
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &kp COMMA
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans        &trans                                                &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans               &trans               &trans               &trans                                                     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &kp INTERNATIONAL_1  &kp INTERNATIONAL_2  &kp INTERNATIONAL_3  &kp INTERNATIONAL_4  &kp INTERNATIONAL_5      &trans       &trans        &kp A         &out OUT_BLE  &out OUT_USB  &out OUT_TOG
&trans  &kp INTERNATIONAL_6  &kp INTERNATIONAL_7  &kp INTERNATIONAL_8  &kp INTERNATIONAL_9  &trans                   &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans               &trans               &trans               &trans               &trans                   &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
